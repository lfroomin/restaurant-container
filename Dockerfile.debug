# Use an official Golang runtime as a parent image
FROM arm64v8/golang:1.20-alpine as builder

# Build Delve
RUN go install github.com/go-delve/delve/cmd/dlv@latest

# Set the working directory to /app
WORKDIR /app

# Install required dependencies
COPY go.mod go.sum ./
RUN go mod download

# Copy the current directory contents into the container at /app
COPY . /app

# Build the program
RUN go build -gcflags="all=-N -l" -o main .

FROM arm64v8/alpine

COPY --from=builder /app/main /main
COPY --from=builder /app/app.env /app.env
COPY --from=builder /go/bin/dlv /

# Expose port 8080 for the program to listen on and 4000 to attach debugger
EXPOSE 8080 4000

# Set the working directory to /
WORKDIR /

# Run the program when the container starts
CMD [ "./dlv", "--listen=:4000", "--headless=true", "--accept-multiclient", "--api-version=2", "exec", "./main" ]
